{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/drandredev/react/Laboratorio03/votaciones/src/Statistics.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Statistics = props => {\n  const all = props.good + props.neutral + props.bad;\n  const average = (props.good - props.bad) / all;\n  const positive = props.good / all * 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"good \", props.good]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"neutral \", props.neutral]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"bad \", props.bad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"all \", all]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"average \", average]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"positive \", positive, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Statistics;\nexport default Statistics;\n\nvar _c;\n\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"sources":["/mnt/c/Users/drandredev/react/Laboratorio03/votaciones/src/Statistics.js"],"names":["Statistics","props","all","good","neutral","bad","average","positive"],"mappings":";;;AAAA,MAAMA,UAAU,GAAIC,KAAD,IAAW;AAE1B,QAAMC,GAAG,GAAGD,KAAK,CAACE,IAAN,GAAaF,KAAK,CAACG,OAAnB,GAA6BH,KAAK,CAACI,GAA/C;AACA,QAAMC,OAAO,GAAG,CAACL,KAAK,CAACE,IAAN,GAAaF,KAAK,CAACI,GAApB,IAAyBH,GAAzC;AACA,QAAMK,QAAQ,GAAIN,KAAK,CAACE,IAAN,GAAaD,GAAd,GAAmB,GAApC;AAEA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,0BAASD,KAAK,CAACE,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,6BAAYF,KAAK,CAACG,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA,yBAAQH,KAAK,CAACI,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAA,yBAAQH,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAA,6BAAYI,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAA,8BAAaC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAjBD;;KAAMP,U;AAmBN,eAAeA,UAAf","sourcesContent":["const Statistics = (props) => {\r\n\r\n    const all = props.good + props.neutral + props.bad\r\n    const average = (props.good - props.bad)/all\r\n    const positive = (props.good / all)*100\r\n\r\n    return(\r\n        <div>\r\n            <h1>statistics</h1>\r\n            <p>good {props.good}</p>\r\n            <p>neutral {props.neutral}</p>\r\n            <p>bad {props.bad}</p>\r\n            <p>all {all}</p>\r\n            <p>average {average}</p>\r\n            <p>positive {positive}%</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Statistics "]},"metadata":{},"sourceType":"module"}